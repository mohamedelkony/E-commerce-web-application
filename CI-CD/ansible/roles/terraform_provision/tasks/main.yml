---
# Run Terraform to provision EC2 instances
- name: Create terraform work directory
  ansible.builtin.copy:
    src: "{{ terraform_config_dir }}/"
    dest: "{{ terraform_work_dir }}"
    mode: '0755'
    force: yes

- name: Initialize Terraform
  ansible.builtin.command:
    cmd: terraform init
    chdir: "{{ terraform_work_dir }}"

- name: Run Terraform to provision EC2 instance
  ansible.builtin.command:
    cmd: terraform apply -auto-approve
    chdir: "{{ terraform_work_dir }}"
  register: terraform_output

- name: Get the public IP of the created EC2 instance
  ansible.builtin.command:
    cmd: terraform output -json jenkins_public_ip
    chdir: "{{ terraform_work_dir }}"
  register: ec2_public_ip

- name: Parse EC2 public IP
  ansible.builtin.set_fact:
    ec2_ip: "{{ ec2_public_ip.stdout | from_json }}"
  when: ec2_public_ip.stdout is not none

- name: Add EC2 instance to inventory
  add_host:
    name: "{{ ec2_ip }}"
    groups: Jenkins_ec2_instances
    ansible_user: '{{ EC2_instance_ssh_username}}'
    ansible_ssh_private_key_file: "{{ private_key_path }}"

# Wait for SSH to be ready
- name: Wait for SSH to be available
  wait_for:
    host: "{{ ec2_ip }}"
    port: 22
    timeout: 300
    state: started
